<!DOCTYPE html>
<html lang="en">
<head>
<title>Individual Progress Document</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="ipd.css" rel="stylesheet">
</head>
<body>
<div id="wrapper">
<header>
<h1>Individual Progress Document</h1>
</header>
<div class="darkdivider"></div>
<main>
	<h3><br>
	Johnathan Picek<br>
	Dr. Michael Lewis<br>
	CPSC 49200-003<br>
	Software Systems Capstone<br>
	Lewis University<br>
	Spring 2023
	</h3>

	<div class="divider"></div>

	<h3>next up:</h3>
	<div class="divider"></div>
	
	<div class="weeklyUpdate">
		<h4>Week 7 (due 2/26):</h4><br>
		For next week, we will need to make more concrete progress. We are 3 or 4 weeks from the Manual draft deliverable due date, so ideally we should begin getting words onto the page (aside from just the format/outline that I have created).
	</div>
	
	<div class="divider"></div>

	<h3>completed:</h3>
	<div class="weeklyUpdate">
		<h4>Week 6 (due 2/19):</h4><br>
		This week, we held our weekly Tuesday group meeting just after the class session as usual. We decided to stick with the spaces.W3Schools.com hosting platform. Individually, I completed the Use Cases table that I had begun last week, which will help us recognize the distinct needs of each of our app's different user types. Some of us also picked sections of the Project Manual to begin writing a portion of. Tentatively, I am working on the Data/Database section.
		<br><br>
		(Planning, from Week 4, kept below):<br>
		We are approximately 4 (or 5, depending on if we have a week of no assignments due to Spring Break) weeks away from the first project deliverable due in Week 10. It will be very important going forward to make significant progress towards that each week. We will need to solidify our weekly goals/agenda to keep up with that progress.
	</div>
	<div class="divider"></div>
	<div class="weeklyUpdate">
		<h4>Week 5 (due 2/12):</h4><br>
		In Week 5, I created a shared file through my Lewis University Office account with a sharable Sharepoint link that we will use to collaborate on the Project Manual Draft 1, due in Week 10. I built an Outline of the submission and added the Rubric details to it in order to easily refer to it while we are writing the manual. I also began analyzing our project with a Software Engineering approach, beginning with developing User Stories and Use Cases to have a greater understanding of the expectations of our various stakeholders.<br><br>
		(Planning, from Week 4, kept below):<br>
		We will need to decide on a team name at some point. We should begin to form an outline of a schedule, with weekly goals/agenda, to make sure we progress properly towards our first Team deliverable, the Project Manual First Draft, due in Week 10. Other than that, we can practice or even begin working on/with any designs, frameworks, or tools we agree upon using, such as React.
	</div>
	<div class="divider"></div>
	
		<div class="weeklyUpdate">
		<h4>Week 4 (due 2/5):</h4><br>
		In Week 4, I requested and received verbal approval from Dr. Lewis to add Matthew Martyka as our 5th team member. After our class meeting which focused on the Reflection assignment, our group, now 5 strong, collaborated on a voice call for about 2 hours. During this time, we re-did introductions for Matthew's sake and engaged in more casual conversation to help everyone become comfortable working with each other. We also further fleshed out some of the project idea, shared more reference materials, and considered which frameworks, programming languages, and technology tools we might use aside from the suggested HTML/CSS, JavaScript, and React.js.<br><br>

		We have a very promising project idea, and we are moving past the conceptual stage into design ideas and tools, but unfortunately, we still don't have a team name yet!<br><br>
		(Planning, from Week 3, kept below):<br>
		Our team has tentatively decided to meet each Tuesday immediately after the class meeting. We intend to ask for clarification on the scope of the project assignment this week, and after that we will continue with our planning and and refining of the specifics of the application.<br><br>
		We could also come up with a team name, I guess, since we haven't yet!
		</div>
	
	<div class="divider"></div>
	
		<div class="weeklyUpdate">
		<h4>Week 3 (due 1/29):</h4><br>
		In Week 3, I took the initiative to message Joseph Eisman to begin forming our team. I enjoyed some of his discussion board posts in previous classes (Discrete Math specifically I think) and in this class, so I thought it would be nice to form a team with him. After agreeing in direct messages in Zoom chat, I added us to the spreadsheet with the note "open to 2 more members." Not long after, Kimberly Johnson added her name. Still needing a 4th, I invited Valine for the same reason as Joe -- I enjoyed reading his perspective on discussion boards in this class and other classes. Kim invited us all to a Discord server before the class Zoom session closed.<br><br>
		Because of our quick communication and eagerness to develop a project idea, we were able to meet for a few hours after the Tuesday class session, and again on Thursday. We settled on what was originally Kim's idea, but with input from all 4 of us, a localized charity connection portal. We researched similar resources, brainstormed some of the features and functions, collaborated via a mindmap to flesh out the idea in more detail, and obtained approval from Dr. Lewis on Tuesday. We voice chatted for about 5 hours total over across Tuesday and Thursday.<br><br>
		(Planning, from Week 2, kept below):<br>
		Next week, in Week 3, we will hopefully have our teams and projects decided and begin to work on them. It would probably be a good idea to start by agreeing on scheduling and communication expectations. Ideally, we would find a good time for the team to meet, possibly once or twice per week in a group audio- or video-call.<br><br>

		We would also agree on some software or platforms to use to facilitate that communication, such as<br>
		&emsp;- Slack, Teams, Discord, Zoom, email, or others<br>
		and another solution to use for file sharing. I expect we will use Github for the repository, but some people may expect to use other services like<br>
		&emsp;- Google Docs, Google Drive, OneDrive, email, or others for brainstorming and temporary working files.
	</div>
	
	<div class="divider"></div>

	<div class="weeklyUpdate">
		<h4>Week 2 (submitted 1/22):</h4><br>
		In Week 2, I have converted my Individual Progress Document into an HTML file both for practice and in order to add some style, pictures, and more. The css is not fully implemented yet, so it is pretty plain and still a work in progress, but it is prettier than the text document. I also have completed the react.js tutorial. The full code is <a href="tic-tac-toe.js">here</a>, and here is a screenshot of the completed tutorial:<br><br>
		<img src="images/react-js-tutorial.png" width="80%"/>
	</div>
	
	<div class="divider"></div>

	<div class="weeklyUpdate">
		<h4>Week 1 (submitted 1/15):</h4><br>
		In Week 1, I created the repository, the README.md, and the Individual Process Document.txt. In response to Dr. Lewis's feedback, I have decided to detail this process more thoroughly:<br>
		<ol type="1">
			<li>I created a new repository on my existing Github account.</li>
			<ol type="a">
				<li>Go to https://www.github.com and sign in or create an account, like any other website/service/app.</li>
				<li>From the left side navigation panel, next to the "Top Repositories" header, click the green "New" button</li>
				<li>Set the Owner (myself) and enter a Repository Name, both required</li>
				<li>Set to Public in this case as I want Dr. Lewis or others to be able to see, and possibly contribute at a later point (the owner needs to allow this individually later on).<br>
				Private would not allow others to view at all.</li>
				<li>Click the green "Create Repository" at the bottom.</li>
			</ol>
			</li>
			
			<div class="divider"></div>
			
			<li>Now I needed to assign the local folder to the repository. I already had Git-Bash installed from a previous class, but I had to update, which did an uninstall and reinstall of the newest version. With that done, I...</li>
			<ol type="a">
				<li>Open Git-Bash, which is a Command Line Interface for GitHub similar to the Command Prompt or Terminal available on most Operating Systems</li>
				<li>Navigated to the correct local folder with the "cd" command:
				<div class="code">
				<code>cd D:Documents/School/Lewis</code> &emsp;(further folders not shown)
				</div>
				</li>
				<li>First, I must initialize this directory as the local directory for the repository with the command "git init"
				<div class="code"><code>git init</code>
				</div>
				This sets up the intial github files for version control and tracking in a hidden folder inside the current folder,<br>
				&emsp;*** There are many optional flags for this command</li>
			</ol>
			
			<div class="divider"></div>
			
			<li>Next, I created the Individual Progress Document.txt file through Notepad locally, and saved it.</li>
			<ol type="a">
			<li>Using the command "git add .", I stage all of the files in the current working directory for commit to the repository.
			   * There are many optional flags for this command</li>
			<li>Using the command "git commit -m "message here" like so:
				<div class="code"><code>
				git commit -m "Initial repo and starting file creation"</code>
				</div>
				the message is stored, and the files are confirmed, ready to be sent to the repository.<br>
				&emsp;*** There are many optional flags for this command</li>
			<li>Just the first time, prior to pushing the files, we must assign the remote URL
			of the repository.
			   From the Repository main page, click the green Code button dropdown, then the Local tab, and copy the Repository URL
			   For mine it is https://github.com/jpicek/SP2023-Capstone-Progress-Document.git and the command is "git remote add origin URL". So, back in Git-Bash, I entered
			   <div class="code"><code>git remote add origin https://github.com/jpicek/SP2023-Capstone-Progress-Document.git</code>
			   </div>
			   to link the local folder to the remote repository.</li>
			<li>Finally, push the locally created or edited files that were staged (in step 3a) and committed with a message (in step 3b)
			   Use the command "git push" 
			   &emsp;*** There are many optional flags for this command</li>
			   </ol>
		</ol>
			   
		NOTE: Since Step 3c is only necessary once, file adds/edits/deletions going forward are mainly a 3 step process of:<br>
		<ul type="none">
		<li><code>git add .</code> (the . prevents deletion of files, if you want deletions as well, that's <code>"git add -A"</code></li>
		<li><code>git commit -m "the message for this commit"</code></li>
		<li><code>git push</code></li>
		</ul>
			
		Additionally, small or non-code edits may be done through the GitHub website. I created the README.md file on there, to give the Repository a landing page and a little more organization. I have made these .txt file edits on the website.<br><br>

		Code edits should and will be done outside of the website though, as it has no syntax checking or testing. Coding should be done in an IDE if possible and at least tested, documented, and confirmed to be working (well, mostly...) before submission to a repository, but text edits like this are fine to do through the website.
	</div>
</main>
<!--  Not necessary to display, but might later
<footer>
Copyright &copy; 2023 Johnathan Picek
</div>
</footer>
-->
</div>
</body>
</html>
